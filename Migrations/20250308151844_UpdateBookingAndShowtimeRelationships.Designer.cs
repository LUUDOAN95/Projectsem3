// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eproject3.Models.Generated;

#nullable disable

namespace eproject3.Migrations
{
    [DbContext(typeof(ABCDMallContext))]
    [Migration("20250308151844_UpdateBookingAndShowtimeRelationships")]
    partial class UpdateBookingAndShowtimeRelationships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eproject3.Models.Generated.Booking", b =>
                {
                    b.Property<Guid>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("BookingTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ExpiryTime")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Qrcode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("QRCode");

                    b.Property<int?>("SeatId")
                        .HasColumnType("int");

                    b.Property<int?>("ShowtimeId")
                        .HasColumnType("int");

                    b.Property<int?>("ShowtimeId1")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("Qrcode")
                        .IsUnique()
                        .HasFilter("[QRCode] IS NOT NULL");

                    b.HasIndex("SeatId");

                    b.HasIndex("ShowtimeId");

                    b.HasIndex("ShowtimeId1");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("eproject3.Models.Generated.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmissionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Feedback__6A4BEDD6F70CCA68");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("eproject3.Models.Generated.Gallery", b =>
                {
                    b.Property<int>("GalleryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GalleryId"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UploadDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("GalleryId")
                        .HasName("PK__Gallery__CF4F7BB5E0A4453A");

                    b.ToTable("Gallery", (string)null);
                });

            modelBuilder.Entity("eproject3.Models.Generated.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<string>("CoverImage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<bool?>("IsHot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsPopular")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateOnly?>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrailerUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("MovieId")
                        .HasName("PK__Movies__4BD2941AAC042187");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("eproject3.Models.Generated.MovieShowtime", b =>
                {
                    b.Property<int>("ShowtimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowtimeId"));

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<int>("HallNumber")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ShowDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<decimal>("TicketPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ShowtimeId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieShowtimes");
                });

            modelBuilder.Entity("eproject3.Models.Generated.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatId"));

                    b.Property<bool?>("IsBooked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("SeatCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("TheaterId")
                        .HasColumnType("int");

                    b.HasKey("SeatId")
                        .HasName("PK__Seats__311713F336A23474");

                    b.HasIndex("TheaterId");

                    b.HasIndex(new[] { "SeatCode" }, "UQ__Seats__B0DB9629F23F8AD2")
                        .IsUnique();

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("eproject3.Models.Generated.Shop", b =>
                {
                    b.Property<int>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShopId"));

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ShopName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ShopId")
                        .HasName("PK__Shops__67C557C924430769");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("eproject3.Models.Generated.Showtime", b =>
                {
                    b.Property<int>("ShowtimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowtimeId"));

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MovieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TheaterId")
                        .HasColumnType("int");

                    b.HasKey("ShowtimeId");

                    b.HasIndex("MovieId");

                    b.HasIndex("TheaterId");

                    b.ToTable("Showtime");
                });

            modelBuilder.Entity("eproject3.Models.Generated.Theater", b =>
                {
                    b.Property<int>("TheaterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TheaterId"));

                    b.Property<int>("SeatCapacity")
                        .HasColumnType("int");

                    b.Property<string>("TheaterName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TheaterId")
                        .HasName("PK__Theaters__4D68B2190F04751D");

                    b.ToTable("Theaters");
                });

            modelBuilder.Entity("eproject3.Models.Generated.Booking", b =>
                {
                    b.HasOne("eproject3.Models.Generated.Seat", "Seat")
                        .WithMany("Bookings")
                        .HasForeignKey("SeatId");

                    b.HasOne("eproject3.Models.Generated.MovieShowtime", "MovieShowtime")
                        .WithMany("Bookings")
                        .HasForeignKey("ShowtimeId");

                    b.HasOne("eproject3.Models.Generated.Showtime", null)
                        .WithMany("Bookings")
                        .HasForeignKey("ShowtimeId1");

                    b.Navigation("MovieShowtime");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("eproject3.Models.Generated.MovieShowtime", b =>
                {
                    b.HasOne("eproject3.Models.Generated.Movie", "Movie")
                        .WithMany("MovieShowtimes")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("eproject3.Models.Generated.Seat", b =>
                {
                    b.HasOne("eproject3.Models.Generated.Theater", "Theater")
                        .WithMany("Seats")
                        .HasForeignKey("TheaterId")
                        .HasConstraintName("FK__Seats__TheaterId__4222D4EF");

                    b.Navigation("Theater");
                });

            modelBuilder.Entity("eproject3.Models.Generated.Showtime", b =>
                {
                    b.HasOne("eproject3.Models.Generated.Movie", "Movie")
                        .WithMany("Showtimes")
                        .HasForeignKey("MovieId");

                    b.HasOne("eproject3.Models.Generated.Theater", "Theater")
                        .WithMany("Showtimes")
                        .HasForeignKey("TheaterId");

                    b.Navigation("Movie");

                    b.Navigation("Theater");
                });

            modelBuilder.Entity("eproject3.Models.Generated.Movie", b =>
                {
                    b.Navigation("MovieShowtimes");

                    b.Navigation("Showtimes");
                });

            modelBuilder.Entity("eproject3.Models.Generated.MovieShowtime", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("eproject3.Models.Generated.Seat", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("eproject3.Models.Generated.Showtime", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("eproject3.Models.Generated.Theater", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("Showtimes");
                });
#pragma warning restore 612, 618
        }
    }
}
